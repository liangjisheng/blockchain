椭圆曲线加密算法 Elliptic Curve Cryptography, 是基于椭圆曲线数学理论实现的一种非对称加密算法
相比RSA，ECC优势是可以使用更短的密钥，来实现与RSA相当或更高的安全
据研究，160位ECC加密安全性相当于1024位RSA加密，210位ECC加密安全性相当于2048位RSA加密
目前我国居民二代身份证正在使用 256 位的椭圆曲线密码，虚拟货币比特币也选择ECC作为加密算法

RSA: 基于大质数因子分解困难性的加密方法

椭圆曲线上的点全体构成一个加法群

加法
过曲线上的两点A、B画一条直线，找到直线与椭圆曲线的交点，交点关于x轴对称位置的点，定义为A+B，即为加法

乘法
将椭圆曲线在A点的切线，与椭圆曲线的交点，交点关于x轴对称位置的点，定义为A + A，即2A，即为二倍运算

取反
将A关于x轴对称位置的点定义为-A，即椭圆曲线的正负取反运算

无穷远点
如果将A与-A相加，过A与-A的直线平行于y轴，可以认为直线与椭圆曲线相交于无穷远点

椭圆曲线上的的离散对数难题
当给定G点时, 已知k, 求K=kG点并不困难. 反之, 已知K=kG点, 求k则非常困难

椭圆曲线要形成一条光滑的曲线，要求x,y取值均为实数, 即实数域上的椭圆曲线
但椭圆曲线加密算法，并非使用实数域，而是使用有限域
按数论定义，有限域GF(p)指给定某个质数p，由0、1、2......p-1共p个元素组成的整数集合中定义的加减乘除运算

公钥加密
选择随机数 r, 将消息M生成密文C, 该密文是一个点对, 即: C = {rG, M+rK}, 其中K为公钥

私钥解密
M + rK - k(rG) = M + r(kG) - k(rG) = M

签名算法原理

私钥签名
1. 选择随机数r, 计算点rG=(x, y)
2. 根据随机数r, 消息M的哈希h,私钥k, 计算 s = (h + kx)/r
3. 将消息M和签名{rG, s}发给接收方

公钥验证签名
1. 接收方收到消息M以及签名{rG=(x,y), s}
2. 根据消息求哈希 h
3. 使用发送方公钥K计算: hG/s + xK/s, 并与rG比较, 如相等即验签成功

hG/s + xK/s = hG/s + x(kG)/s = (h+xk)G/s = r(h+xk)G / (h+kx) = rG

DSA签名的第一个步骤是对待签名的消息生成一个消息摘要。不同的签名算法使用不同的消息摘要算法。而ECDSA256使用SHA256生成256比特的摘要

摘要生成结束后, 应用签名算法对摘要进行签名:
产生一个随机数r
利用随机数r, 计算出两个大数rG和s. 将rG和s拼在一起就构成了对消息摘要的签名
这里需要注意的是，因为随机数r的存在，对于同一条消息，使用同一个算法，产生的签名是不一样的
从函数的角度来理解，签名函数对同样的输入会产生不同的输出。因为函数内部会将随机值混入签名的过程

消息的接收方从签名中分离出rG和s，然后利用公开的密钥信息和s计算出rG
如果计算出的rG和接收到的rG值相同，则表示验证成功。否则，表示验证失败

一个群有多少个点就叫做这个群的“阶”(order)
阶，就是一个群的点的数量
但是在循环的子群里我们可以下一个新的，与前面的定义相等的定义, p的阶是最小的正整数n  满足的条件是 np=0
如果不存在n,则说p是无限阶的

p的阶和椭圆曲线是有联系的，拉格朗日定理告诉我们，子群的阶是父群的阶的因子。
换句话说，如果一个椭圆曲线包含 N 个点，它的一个子群包含 n 个点，那么 n 是 N 的因子
